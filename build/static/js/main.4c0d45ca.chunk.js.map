{"version":3,"sources":["logo.svg","Header.js","ItemModal.js","Item.js","Category.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","categories","setCategories","useForm","register","handleSubmit","reset","errors","Row","className","Col","md","Form","onSubmit","data","e","name","category","id","uuidv4","target","InputGroup","FormControl","ref","required","type","placeholder","aria-label","aria-describedby","Append","Button","variant","ItemModal","show","onHide","items","setItems","setName","description","setDescription","priority","setPriority","date","setDate","index","getEditedList","splice","due_date","Modal","size","aria-labelledby","centered","closeButton","Title","Body","Group","controlId","Label","Control","defaultValue","undefined","message","as","pattern","value","Footer","onClick","Item","useState","colour","setColour","modalShow","setModalShow","trim","showDate","setShowDate","editableName","editableDesc","editablePriority","editableDate","style","paddingLeft","useEffect","charAt","backgroundColor","newItems","filter","_","i","Category","contentEditable","map","key","newCategories","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4c0d45ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useForm } from 'react-hook-form';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Header.css';\r\n\r\nfunction Header({ categories, setCategories }) {\r\n\r\n    const { register, handleSubmit, reset, errors } = useForm();\r\n    const createCategory = (data, e) => {\r\n        setCategories([...categories, {name: data.category, id: uuidv4()}]); \r\n        e.target.reset();    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='justify-content-center mt-3'>\r\n                <h1>Dunder Mifflin Task Manager</h1>\r\n            </Row>  \r\n            <Row className='justify-content-center mt-3'>\r\n                <Col md={6}>\r\n                    <Form onSubmit={handleSubmit(createCategory)}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                ref={register({ required: true })}\r\n                                name=\"category\"\r\n                                type=\"text\"\r\n                                placeholder=\"Add Category...\"\r\n                                aria-label=\"Add Category...\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button type=\"submit\" variant=\"success\">Add</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './ItemModal.css';\r\n\r\nfunction ItemModal({ \r\n    show, \r\n    onHide, \r\n    register, \r\n    handleSubmit, \r\n    errors, \r\n    items, \r\n    setItems, \r\n    name, \r\n    setName,\r\n    description, \r\n    setDescription,\r\n    priority, \r\n    setPriority,\r\n    date,\r\n    setDate,\r\n    index }) {\r\n\r\n    const updateItems = (data, e) => {\r\n        setItems([...items, {name: data.name, description: data.description, priority: data.priority, due_date: data.date}]);\r\n        onHide();\r\n    }\r\n\r\n    const editItem = (data, e) => {\r\n        getEditedList(data);\r\n        setItems(items)\r\n        setName(data.name);\r\n        setDescription(data.description);\r\n        setPriority(data.priority);\r\n        setDate(data.date);\r\n        onHide();\r\n    }\r\n\r\n    const getEditedList = (data) => {\r\n        const removedItem = items.splice(index, 1, {name: data.name, description: data.description, priority: data.priority, due_date: data.date})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Form onSubmit={handleSubmit(name ? editItem : updateItems)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Item Details\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>                     \r\n                            <Form.Group controlId=\"formGridAddress1\">\r\n                                <Form.Label>Item Name <span className=\"required\">*</span></Form.Label>\r\n                                <Form.Control \r\n                                    ref={register({required: \"This field is required\"})} \r\n                                    name=\"name\" \r\n                                    type=\"text\" \r\n                                    defaultValue={name ? name : undefined} \r\n                                    placeholder=\"Required\"\r\n                                />\r\n                                    {errors.name && (\r\n                                        <p className=\"errorMessage\">{errors.name.message}</p>\r\n                                    )}\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formGridAddress1\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control \r\n                                    ref={register} \r\n                                    name=\"description\" \r\n                                    as=\"textarea\" \r\n                                    defaultValue={description ? description : undefined}\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Label>Priority</Form.Label>\r\n                                <Form.Control ref={register} name=\"priority\" as=\"select\" defaultValue={priority ? priority : \"N/A\"}>\r\n                                    <option>N/A</option>\r\n                                    <option>1 - Critical</option>\r\n                                    <option>2 - High</option>\r\n                                    <option>3 - Medium</option>\r\n                                    <option>4 - Low</option>\r\n                                    <option>5 - Nice to Have</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label>Due Date (mm/dd/yyyy)</Form.Label>\r\n                                    <Form.Control \r\n                                        ref={register({ pattern: {\r\n                                                            value: /^\\d{2}\\/\\d{2}\\/\\d{4}$/, \r\n                                                            message: \"Invalid date format\"\r\n                                                        } })} \r\n                                        name=\"date\" \r\n                                        type=\"text\" \r\n                                        defaultValue={date ? date : \"\"}\r\n                                        placeholder=\"MM/DD/YYYY\"\r\n                                    />\r\n                                    {errors.date && (\r\n                                        <p className=\"errorMessage\">{errors.date.message}</p>\r\n                                    )}\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={onHide} variant=\"secondary\">Cancel</Button>\r\n                        <Button type=\"submit\" variant=\"primary\">Create</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemModal\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ItemModal from './ItemModal.js';\r\nimport './Item.css';\r\n\r\nfunction Item({ name, description, priority, due_date, index, items, setItems}) {\r\n\r\n    const [colour, setColour] = useState(\"#34dcff\");\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [showDate, setShowDate] = useState(due_date.trim() == \"\" ? false : true)\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [editableName, setName] = useState(name);\r\n    const [editableDesc, setDescription] = useState(description);\r\n    const [editablePriority, setPriority] = useState(priority);\r\n    const [editableDate, setDate] = useState(due_date);\r\n\r\n    const deleteItem = () => {      \r\n        var newItems = items.filter((_, i) => i != index);\r\n        setItems(newItems);\r\n    }\r\n\r\n    var style = {\r\n        paddingLeft: \"10px\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        setShowDate(editableDate.trim() == \"\" ? false : true);\r\n    }, [editableDate])\r\n\r\n    useEffect(() => {\r\n        if (editablePriority.charAt(0) == 1) {\r\n            setColour(\"#ff4e4e\")\r\n        } else if (editablePriority.charAt(0) == 2) {\r\n            setColour(\"#ffae19\")\r\n        } else if (editablePriority.charAt(0) == 3) {\r\n            setColour(\"#ffea00\")\r\n        } else if (editablePriority.charAt(0) == 4) {\r\n            setColour(\"#ddf969\")\r\n        } else if (editablePriority.charAt(0) == 5) {\r\n            setColour(\"#46d246\")\r\n        } else {\r\n    \r\n        }\r\n    }, [editablePriority])\r\n\r\n    return (\r\n        <div className=\"item__container\">\r\n            <div className=\"item__details\">\r\n                <div className=\"item__header\">\r\n                { editablePriority.charAt(0) != \"N\" && \r\n                    <div className=\"item__priority\" style={{backgroundColor: colour}}>{editablePriority.charAt(0)}</div>\r\n                }\r\n                    <div className=\"item__title\">{editableName}</div>\r\n                    \r\n                </div>\r\n                <div className=\"item__description\" style={editablePriority.charAt(0) == \"N\" ? style : undefined}>{editableDesc}</div>\r\n                <div className=\"item__dueDate\" style={editablePriority.charAt(0) == \"N\" ? style : undefined}>{showDate ? \"Date:\" : \"\"} {editableDate}</div>\r\n            </div>\r\n            <div className=\"item__buttonGroup\">\r\n                <button onClick={() => setModalShow(true)}>Edit</button>\r\n                <button onClick={deleteItem}>Delete</button>\r\n            </div>\r\n            <ItemModal \r\n                show={modalShow} \r\n                onHide={() => setModalShow(false)} \r\n                register={register} \r\n                handleSubmit={handleSubmit} \r\n                errors={errors}\r\n                name={editableName}\r\n                setName={setName}\r\n                description={editableDesc}\r\n                setDescription={setDescription}\r\n                priority={editablePriority}\r\n                setPriority={setPriority}\r\n                date={editableDate}\r\n                setDate={setDate}\r\n                index={index}\r\n                setItems={setItems}\r\n                items={items}\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Item from './Item.js';\r\nimport ItemModal from './ItemModal.js';\r\nimport { useForm } from 'react-hook-form';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Category.css';\r\n\r\nfunction Category({ name, categories, setCategories, index }) {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const deleteCategory = () => {\r\n        var newCategories = categories.filter((_, i) => i != index);\r\n        setCategories(newCategories);\r\n    }\r\n\r\n    return (\r\n        <div className='category__container'>\r\n            <h5 contentEditable={true}>{name}</h5>\r\n            <p>click title to edit</p>\r\n            <Button variant=\"success\" size=\"sm\" className=\"category__addItem\" onClick={() => setModalShow(true)}>+ Add Item</Button>{' '}\r\n\r\n            {items?.map( ({name, description, priority, due_date}, index) => (\r\n                <Item \r\n                    name={name} \r\n                    description={description} \r\n                    priority={priority} \r\n                    due_date={due_date} \r\n                    key={uuidv4()} \r\n                    index={index} \r\n                    items={items} \r\n                    setItems={setItems}\r\n                />\r\n            ))}\r\n            <ItemModal \r\n                show={modalShow} \r\n                onHide={() => setModalShow(false)} \r\n                register={register} \r\n                handleSubmit={handleSubmit} \r\n                errors={errors}\r\n                items={items}\r\n                setItems={setItems}\r\n            />\r\n            <a className=\"category__close\" onClick={deleteCategory}>×</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport Row from 'react-bootstrap/Row';\nimport Header from './Header.js';\nimport Category from './Category.js';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n\n  const [categories, setCategories] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <Header categories={categories} setCategories={setCategories}/>   \n      <Row className=\"justify-content-center\">\n        \n        {categories.map( (category, index) => (\n          <Category \n              name={category.name} \n              index={index} \n              categories={categories} \n              setCategories={setCategories} \n              key={category.id}/>\n        ))}\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}